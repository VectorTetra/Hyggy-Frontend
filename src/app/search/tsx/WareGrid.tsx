import { useState, useEffect } from "react";
import styles from "../css/WareGrid.module.css";
import Link from "next/link";
import Image from "next/image";
import StarRating from "../../sharedComponents/StarRating";
import Pagination from "../../sharedComponents/Pagination";

export default function WareGrid(props: any) {
  const [favorites, setFavorites] = useState<string[]>([]);
  const [currentPage, setCurrentPage] = useState(1);

  // –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É –¥–æ –æ–±—Ä–∞–Ω–∏—Ö
  const toggleFavorite = (wareId: string) => {
    setFavorites((prevFavorites) =>
      prevFavorites.includes(wareId)
        ? prevFavorites.filter((id) => id !== wareId)
        : [...prevFavorites, wareId]
    );
  };
  // –ü—ñ—Å–ª—è –∑–º—ñ–Ω–∏ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –ø—Ä–æ–∫—Ä—É—Ç–∏—Ç–∏ –≤–≥–æ—Ä—É
  useEffect(() => {
    setTimeout(() => {
      window.scrollTo({ top: 0, behavior: "smooth" });
    }, 0); // –∑–∞—Ç—Ä–∏–º–∫–∞ 0 –º—Å
  }, [currentPage]);


  const itemsPerPage = 20; // –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É
  const totalItems = props.wares.length;
  // –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤, —è–∫—ñ –±—É–¥—É—Ç—å –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω—ñ –Ω–∞ –ø–æ—Ç–æ—á–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
  const displayedWares = props.wares.slice(
    (currentPage - 1) * itemsPerPage,
    currentPage * itemsPerPage
  );

  return (
    <div>
      <div id={styles.wareGrid}>
        {displayedWares.map((ware: any) => (
          <div key={ware.id} className={styles.wareCard}>
            <div className={styles.wareCardLinkContainer}>
              <button
                className={styles.favoriteButton}
                onClick={() => toggleFavorite(ware.id)}
              >
                {favorites.includes(ware.id) ? "üíñ" : "üñ§"}
              </button>
              <Link href={`/ware/${ware.id}`} className={styles.wareCardLink}>
                <Image
                  src={ware.imageSrc}
                  alt={ware.longName}
                  className={styles.wareImage}
                  layout="contain"
                  width={300}
                  height={400}
                />
                <div className={styles.wareStickersContainer}>
                  {ware.discount > 0 && <span className={styles.discountSticker}> - {ware.discount} %</span>}
                  {ware.tag === "–ù–æ–≤–∏–Ω–∫–∞" && <span className={styles.newSticker}>–ù–æ–≤–∏–Ω–∫–∞</span>}
                  {ware.tag === "–ó–∞–≤–∂–¥–∏ –Ω–∏–∑—å–∫–∞ —Ü—ñ–Ω–∞" && <span className={styles.lowPriceSticker}>–ó–∞–≤–∂–¥–∏ –Ω–∏–∑—å–∫–∞ —Ü—ñ–Ω–∞</span>}
                  {ware.tag === "–ß—É–¥–æ–≤–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è" && <span className={styles.saleSticker}>–ß—É–¥–æ–≤–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è</span>}
                </div>
              </Link>
            </div>

            <div className={styles.wareInfo}>
              <h3>{ware.shortName}</h3>
              <p>{ware.longName}</p>

              <div className={styles.rating}>
                <StarRating rating={ware.rating} />
              </div>
              <div className={styles.warePrice}>
                <span className={styles.discountedPrice}>
                  {Math.ceil(ware.price * ((100 - ware.discount) / 100))} –≥—Ä–Ω
                </span>
                {ware.discount !== 0 && (
                  <span className={styles.oldPrice}>{ware.price} –≥—Ä–Ω</span>
                )}
              </div>

              <table className={styles.availability}>
                <tbody>
                  <tr className={styles.delivery}>
                    {ware.deliveryOption.includes("–ù–µ–º–∞—î –¥–æ—Å—Ç–∞–≤–∫–∏") && <td> <svg width="12" height="12">
                      <circle cx="6" cy="6" r="6" fill="red" />
                    </svg></td>}
                    {ware.deliveryOption.includes("–û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è") && <td><svg width="12" height="12">
                      <circle cx="6" cy="6" r="6" fill="yellow" />
                    </svg></td>}
                    {ware.deliveryOption.includes("–Ñ –¥–æ—Å—Ç–∞–≤–∫–∞") && <td><svg width="12" height="12">
                      <circle cx="6" cy="6" r="6" fill="green" />
                    </svg></td>}
                    <td>{ware.deliveryOption}</td>
                  </tr>
                  <tr className={styles.storeAvailability}>
                    {ware.storeAvailability.includes("–ù–µ–º–∞—î –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ") && <td><svg width="12" height="12">
                      <circle cx="6" cy="6" r="6" fill="red" />
                    </svg></td>}
                    {ware.storeAvailability.includes("–ú–æ–∂–ª–∏–≤–æ –∑–∞–º–æ–≤–∏—Ç–∏") && <td><svg width="12" height="12">
                      <circle cx="6" cy="6" r="6" fill="yellow" />
                    </svg></td>}
                    {ware.storeAvailability.includes("In stock") && <td><svg width="12" height="12">
                      <circle cx="6" cy="6" r="6" fill="green" />
                    </svg></td>}
                    <td>{ware.storeAvailability}</td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        ))}
      </div>
      <Pagination
        totalItems={totalItems}
        itemsPerPage={itemsPerPage}
        currentPage={currentPage}
        onPageChange={setCurrentPage}
      />
    </div>
  );
}
